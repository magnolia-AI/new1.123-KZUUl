
# Workflow Version: 2.0.3
name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Use project-specific worker name from secrets for security
  WORKER_NAME: ${{ secrets.MAGNOLIA_WORKER_NAME }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Validate worker name
        run: |
          if [ -z "$WORKER_NAME" ]; then
            echo "❌ Error: MAGNOLIA_WORKER_NAME secret is not set"
            echo "This secret should contain the unique worker name for this project"
            exit 1
          fi
          echo "✅ Worker name is set (length: ${#WORKER_NAME})"

      - name: Debug wrangler.toml before update
        run: |
          echo "📋 Original wrangler.toml content:"
          cat wrangler.toml || echo "⚠️  wrangler.toml not found"
          echo ""
          echo "🔍 Looking for name setting:"
          grep -n "name" wrangler.toml || echo "⚠️  No 'name' found in wrangler.toml"

      - name: Update wrangler.toml with secure worker name
        run: |
          echo "📝 Updating wrangler.toml with worker name (length: ${#WORKER_NAME})"
          
          # Create a backup
          cp wrangler.toml wrangler.toml.backup
          
          # Use a temporary file to avoid shell expansion issues
          echo "$WORKER_NAME" > /tmp/worker_name.txt
          WORKER_NAME_FROM_FILE=$(cat /tmp/worker_name.txt)
          
          # Try multiple patterns to update the name using the file content
          if grep -q "^name = " wrangler.toml; then
            echo "Found 'name = ' pattern, updating..."
            sed -i "s/^name = .*/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
          elif grep -q "^name:" wrangler.toml; then
            echo "Found 'name:' pattern, updating..."
            sed -i "s/^name:.*/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
          elif grep -q "name" wrangler.toml; then
            echo "Found 'name' somewhere, trying to replace..."
            sed -i "s/name = ".*"/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
            sed -i "s/name = '.*'/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
            sed -i "s/name: ".*"/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
            sed -i "s/name: '.*'/name = "$WORKER_NAME_FROM_FILE"/" wrangler.toml
          else
            echo "No name setting found, adding it at the top..."
            echo "name = "$WORKER_NAME_FROM_FILE"" > temp_wrangler.toml
            cat wrangler.toml >> temp_wrangler.toml
            mv temp_wrangler.toml wrangler.toml
          fi
          
          # Clean up temp file
          rm -f /tmp/worker_name.txt
          
          echo "✅ Updated wrangler.toml"

      - name: Verify wrangler.toml update
        run: |
          echo "📋 Updated wrangler.toml content:"
          cat wrangler.toml
          echo ""
          echo "🔍 Checking for valid name format:"
          if grep -q '^name = ".*"' wrangler.toml && ! grep -q '***' wrangler.toml; then
            echo "✅ Worker name properly set in wrangler.toml"
          else
            echo "❌ Worker name NOT properly set in wrangler.toml"
            echo "Backup content:"
            cat wrangler.toml.backup
            exit 1
          fi

      - name: Build and Deploy
        run: bun run deploy

      - name: Output deployment URL
        run: |
          # Extract the actual worker name from wrangler.toml to avoid censoring
          DEPLOYED_NAME=$(grep '^name = ' wrangler.toml | sed 's/name = "\(.*\)"/\1/')
          echo "🚀 Deployed to: https://$DEPLOYED_NAME.magnusson27.workers.dev"
          echo "deployment-url=https://$DEPLOYED_NAME.magnusson27.workers.dev" >> $GITHUB_OUTPUT
